package ObjectOriented.Usage.sam01;
/*
업캐스팅
-하위 객체는 상위 클래스형 변수에 대입이 가능, 상위로의 자료형 변환
-업캐스팅은 하위인 교직원은 상위인 사람이라는 개념이 성립 > 교직원은 사람이다

업캐스팅의 제약
-업캐스팅된 변수로는 하위 객체의 멤버를 참조할 수 없는 제약
-교직원 변수 김사랑은 접근 지정자만 허용한다면 모든 멤버에 접근 가능
-사람 변수 사람1은 사람의 멤버만 접근 가능

+업캐스팅은 다형성의 기능 중 하나
* */
public class 교직원테스트 {
    public static void main(String[] args) {
        //업캐스팅
        //김사랑의 본질은 교직원이다
        교직원 김사랑 = new 교직원("김사랑", 1111, "패스트캠퍼스",2222);

        System.out.println("----------------------");
        System.out.println("이름: "+김사랑.이름);
        System.out.println("주민번호: "+김사랑.번호); //의도한대로 출력되지 않음 김사랑의 사람번호는 교직원번호로 덮
        System.out.println("주민번호: "+김사랑.get주민번호());
        System.out.println("학교명: "+김사랑.학교명);
        System.out.println("교번: "+김사랑.get교직원번호());


        //교직원의 정보를 사람에 대입, 교직원이 더 많은 정보를 가지기 때문에 가능
        사람 사람1 = 김사랑;
        System.out.println("----------------------");
        System.out.println("이름: "+사람1.이름); //김사랑
        System.out.println("번호: "+사람1.번호); //1111
        //사람1.get교직원번호(); 사람은 사람에 대한 메서드만 사용할 수 있다
    }
}
